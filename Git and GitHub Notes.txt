========================================== Git and GitHub 

Git:- 

{Tool used to collaborate with each other}. Have you ever thought in your life to go back to childhood days just because you were not able to tolerate the responsibilities.
The same way happens with developers as well when ever you want to implement a new feature and by some reason it was breaking the entire code. Rather than creating new project from scratch 
or deleting the written lines by line. If you have an option to go back just in snap that would be useful. Git provides the same feature to go back to the last check point. When I say last check point its your wish you can start coding at whatever check point you wish to do so.

GitHub:- 

GitHub is an online platform where and which we push our whole git folder to the remote repository. When I say remote repository consider it as big folder existed somewhere else on earth and you are storing your code there. So that whenever you require you can pull whatever version of the code that is required.


========================================== Git Commands

1. To initialize git in the project folder : git init {There will be a file created in the project folder named '.git', It will store or track all the changes happened in that folder. To see them in git bash type 'ls -a'}

2. But how the people who were working on the same folder knows that something is changed by ashish or forget about someone how can even I track my project folder that what all changes that I made which are untracked (when I say untracked in the sense I didn't add them to the '.git' folder.). To see this type 'git status'

3. Ok then now I created a file here in project folder. And now you are about to say that hey git just add it to .git folder when ever I say. Ok Now git will say that ok then please enter command 'git add .'. Here '.' in the sense I am telling git to pick all the files. You can replace them with file names that you want to add.

4. Now the time has come and I want to say git that ok git I revised everything and I am commited to my word to you to say that please save it to '.git' folder. To do that enter 'git commit -m "something to say"'. Now you make your first check point in your product development life cycle.

5. Now my manager came to me and asked what all commits I made till now. To know that press 'git log'.

6. Now I added new file named 'names.txt' and I suddenly deleted it. But I want it back. Then use 'git reset ___Id___'

7. Let say there is a dependency where I am about to commit a feature but suddenly some idea which is better than this feature comes to mind. So rather than commiting this feature or deleting this feature what we can do is I will git that ok git I am trying new but I don't want to lose the current existing feature so store it somewhere else other than .git folder. Ok then type 'git stash'.

8. Ok then I worked on the new feature and it seems like not working so I need pull the stashed work to the staging area so what I will do is like 'git stash pop'. SO whenever I say this command the git will take out the stashed feature and add it to the staging area form where I can commit it.

9. So what if the new feature works and want to clear the stashed code? Then type 'git stash clear'. It clears current existing code in the stashed area.


======================================= Working with remote repository (GitHub)

1. Ok then till now we have learn about git like saving the checkpoints (continuous progess) at repository. When I say repository it is something limited to my laptop it self. Suppose if my manager want to check my code then how it is possible. The only way is he must to take my laptop open the code and then check it. But what if I move all my check points to the remote folder which I told earlier and then what if I give access to my code to everyone? anycone can see my code and then can make changes right but how to do that.
Go to GitHub create a repository where it will show remote repository URL. Copy that URL and type the command here 'git remote add origin https://github.com/06ashish1999/MyNotesForCourses.git'. Now your .git folder will be moved to remote repo.

2. It's not over here we just added the remote repository to local. To push the existing checkpoints to remote repo type 'git push origin master'.

3.Now you may wonder what does it meant by 'origin' in command. It' simply a name given to my repository URL. If you have a look at the url 'git remote add origin URL'. origin is the name given to the URL just like the contact names for phone numbers. So we can remember it easily.

4. Branching - Just imagine You are working on the main code and your friend is working on feature. So if both of you commit your code at a time. That would be tough for everyone to track. What if I create a separate branch and ask my friend to commit his feature code on to that branch so that every feature can track separately. for that type 'git branch branch-name'

5. Whenever you create a branch there is something called as 'head'. This head will move to the newely created branch and what ever commits you do it will start commit on that branch.

6. If you want to move your head to main branch then type 'git checkout branch-name'.

7. Ok then you work completed on main code and as well as on the branch so you want to make your code public (in the sense whenever your code is downloaded by others it will contains all the features avaialble) to make that 'git merge branch-name'

8. To know what is the GitHub repository I added to my local git. Type 'git remote -v' when ever you type this command it will show the URL for fetch and push request.

9. Now ok you got a job and have been asked to work on the project. SO how will you download the project for repository? for that you have to fork the project in the sense whenever you search and open the project repository it will show an option to fork it. When you click on the fork. It will copy the project and create a 'fork project' in your GitHub account.

10. Now the project is copied to your GitHub account copy the project URL and paste if you want to download the code. Then go to the destination folder then type 'git clone forked-project-url'

11. Ok what you can do is copy the URL of the original project and you can add it to the remote urls 'git remote add upstream original-project-url'

===================================== Working with existing projects

1. When ever you join in a company you will be given to work on a project and after making changes to the code. What if we commit the changes to the main project branches. It was not accepted. What my manager can do is he will 'fork' the main project in the sense whenever you fork the project it will copy the code from original code repo. So now you can clone from your manager github profile to watch the changes. To do so type 'git clone manager-project-forked-URL'.

2. So as a developer whatever URL you copied is called Main URL. But if you look at it Manager forked (copied) the project from main code base. The URL of that project is called 'Upstream' URL. You can add it to the project by typing 'git remote add upstream upstream-url'.

3. Ok then I cloned the project from Manager GitHub URL. And I created my own branch named 'git branch ashish'. Moving header to ashish so that all the commits I made will be commited to ashish branch 'git checkout ashish'. Now commit your code. The next task is you need to merge the code with the Main project URL. To do so you need to have a 'Pull request' to the main branch.

4. So whenever you commit and push the code to ashish branch. It will automatically creates a pull request to the main branch of the code. But you have to make sure that one branch - one pull request. whatever changes you made will be commited to one branch and it will be considered as one pull request only.

5. 